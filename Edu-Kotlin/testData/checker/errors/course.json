{
  "items": [
    {
      "id": 0,
      "title": "errors",
      "task_list": [
        {
          "name": "kotlinCompilationError",
          "stepic_id": 0,
          "task_files": {
            "Task.kt": {
              "name": "Task.kt",
              "text": "fun foo() \u003d aaa",
              "placeholders": []
            }
          },
          "test_files": {
            "Tests.kt": "import org.junit.Assert\nimport org.junit.Test\n\nclass Test {\n    @Test fun testSolution() {\n        Assert.assertTrue(\"foo() should return 42\", foo() \u003d\u003d 42)\n    }\n}"
          },
          "task_texts": {
            "task": "Write task description here using markdown or html"
          },
          "task_type": "edu"
        },
        {
          "name": "javaCompilationError",
          "stepic_id": 0,
          "task_files": {
            "JavaClass.java": {
              "name": "JavaClass.java",
              "text": "public class JavaClass {\n    public static int i \u003d aaa;\n}\n",
              "placeholders": []
            },
            "Task.kt": {
              "name": "Task.kt",
              "text": "fun foo() \u003d JavaClass.i",
              "placeholders": []
            }
          },
          "test_files": {
            "Tests.kt": "import org.junit.Assert\nimport org.junit.Test\n\nclass Test {\n    @Test fun testSolution() {\n        Assert.assertTrue(\"foo() should return 42\", foo() \u003d\u003d 42)\n    }\n}"
          },
          "task_texts": {
            "task": "Write task description here using markdown or html"
          },
          "task_type": "edu"
        },
        {
          "name": "testFail",
          "stepic_id": 0,
          "task_files": {
            "Task.kt": {
              "name": "Task.kt",
              "text": "fun foo() \u003d 43",
              "placeholders": []
            }
          },
          "test_files": {
            "Tests.kt": "import org.junit.Assert\nimport org.junit.Test\n\nclass Test {\n    @Test fun testSolution() {\n        Assert.assertTrue(\"foo() should return 42\", foo() \u003d\u003d 42)\n    }\n}"
          },
          "task_texts": {
            "task": "Write task description here using markdown or html"
          },
          "task_type": "edu"
        }
      ]
    }
  ],
  "summary": "kotlinCourse",
  "title": "kotlinCourse",
  "programming_language": "kotlin",
  "language": "en"
}